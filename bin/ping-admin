#!/usr/bin/env ruby

require '/opt/eway/lib/bootstrap'
require 'LogFile'
require 'thor'

module Ping; end

class Ping::Admin
  include Log::Self

  def update_item(url, file, description)
    info "Checking for updates to the #{description}."
    Dir.chdir("etc") do
      system "git archive --remote=#{url}: #{file} | tar -x"
    end

    # If there is an update, process it.
    out = sh "git status --porcelain etc/#{file}"
    if out.empty?
      info "No changes."
      return false
    end

    info "Saving new configuration."
    sys ["git", "commit", "-m", message("Updated #{description}."), "etc/#{file}"]
    true
  end

  def update
    r1 = update_item "git@git:lb-config master", "LBAdmin.yaml", 'load balancer configuration'
    r2 = update_item "git@git:cdn-data master", "cdn-data.yaml", 'cdn configuration'
    if r1 || r2
      info "Reloading ping service."
      sys "sudo systemctl reload ping"
    end
  end
end

class Ping::CLI < Thor
  Admin = Ping::Admin.new

  desc "update", "Updates the list of ping targets based on the latest commit."
  def update
    Admin.update
  end
end

$log.info "Started with arguments: #{ARGV.inspect}."
Dir.chdir PROJECT_DIR
Ping::CLI.start
